plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url 'https://maven.isxander.dev/releases' }
    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://api.modrinth.com/maven" }
    maven { url "https://maven.quiltmc.org/repository/release" }
    mavenCentral()
}

loom {
	accessWidenerPath = file("src/main/resources/dsurround.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Mod Menu
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    // Nashorn Script Engine
    implementation "org.openjdk.nashorn:nashorn-core:${project.nashorn_version}"
    include "org.openjdk.nashorn:nashorn-core:${project.nashorn_version}"

    // Configuration APIs
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.clothapi_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation("dev.isxander.yacl:yet-another-config-lib-fabric:${project.yacl_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
    from("CREDITS.md")
}
